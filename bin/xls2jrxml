#
# Copyright (c) 2011-2017 Cloudware S.A. All rights reserved.
#
# Converts excel model to JRXML
#
# Utility program that converts a report defined in excel to JRXML report
#
# This file is part of sp-excel-loader.
#
# sp-excel-loader is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# sp-excel-loader is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with sp-excel-loader.  If not, see <http://www.gnu.org/licenses/>.
#
# encoding: utf-8
#
require 'bundler/setup'
require 'awesome_print'
require 'optparse'
require 'sp/excel/loader'
require 'sp/excel/loader/jrxml/jasper'

require 'byebug'

$args = {
  out_dir: '.',
  compat: false
}

#
# Parse command line arguments
#
option_parser = OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename($PROGRAM_NAME)} [options]"
  opts.on('-o', '--outdir=DIR', "output directory (default .)")                         { |v| $args[:out_dir] = v     }
  opts.on('-c', '--compat'    , "generate a report compatible with JasperSoft Studio")  { $args[:compat]      = true  }
end
option_parser.parse!

if ARGV.length != 1
  puts option_parser.help()
  exit
end

#
# Do the conversion
#
Dir.mkdir $args[:out_dir] unless Dir.exists?($args[:out_dir])
report_name = File.basename(File.expand_path(ARGV[0]),'.*')
out_file = File.expand_path(File.join($args[:out_dir], report_name + '.jrxml'))
converter = ::Sp::Excel::Loader::Jrxml::ExcelToJrxml.new(ARGV[0], nil, true, false, $args[:compat])
File.write(out_file, converter.report.to_xml)

puts "Generated JRXML report to #{out_file}".green
0
